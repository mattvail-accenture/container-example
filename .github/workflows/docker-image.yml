name: Docker Image CI

on:
  push:
    branches: [ "main" ]

env:
  GLOBAL_PREFIX: helloworld
jobs:


  build: 
  
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Output Message
      run: |
        echo "container_name=$GLOBAL_PREFIX:version.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
        echo "this step will build your container, it will use the $container_name, on url $GITHUB_GRAPHQL_URL, and run number $GITHUB_RUN_NUMBER"



    - name: Use the value
      id: step_two
      run: |
        echo "${{ env.container_name }}"



    - name: Build the Docker image
      run: docker build . --file dockerfile --tag ${{env.container_name}}
      
    - name: Upload image
      uses: ishworkh/docker-image-artifact-upload@v1
      with:
        image: ${{env.container_name}}
        retention_days : 1

  scret-example:
    needs: [build]

    runs-on: ubuntu-latest
    environment: dev
    env: 
      name: dev
      SUPER_SECRET: ${{ secrets.ROLENAME }}      
      AWS: ${{ secrets.AWS_KEY }}      

    steps:
    - uses: actions/checkout@v3
    - name: Output Message
      run: |
        echo "container_name=$GLOBAL_PREFIX:version.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV


    - name: Using secrets
      run: |
        echo "Printing your secrets will look like this $AWS and $SUPER_SECRET"
        echo "But you can still pull them out if you add spaces"
        echo "$AWS" | sed 's/./& /g'
        echo "$SUPER_SECRET" | sed 's/./& /g'
        echo "So remember do not allow just anybody to update your github actions"
        echo ${{env.container_name}}








  # dev:
  #   needs: [build]

  #   runs-on: ubuntu-latest
  #   environment: dev
  #   env: 
  #     name: dev
  #     SUPER_SECRET: ${{ secrets.ROLENAME }}      
  #     AWS: ${{ secrets.AWS_KEY }}      
  #   steps:
  #   - uses: actions/checkout@v3


  #   - name: Download image
  #     uses: ishworkh/docker-image-artifact-download@v1
  #     with:
  #       image: "project_name:latest"

  #   - name: Start docker containers
  #     run: |
  #       docker run ENV.CONTAINER_NAME "$name"

  # test:
  #   needs: [build]

  #   runs-on: ubuntu-latest
  #   env:
  #     name: dev
  #     container_name : project_name:latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Build the Docker image
  #     run: eco "hello"

  # stage:
  #   needs: [test]

  #   runs-on: ubuntu-latest
  #   env:
  #     name: dev
  #     container_name : project_name:latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Build the Docker image
  #     run: echo "hello"


  # prod:
  #   needs: [dev]

  #   runs-on: ubuntu-latest
  #   env:
  #     name: dev
  #     container_name : project_name:latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Build the Docker image
  #     run: echo "hello"

  #   # runs-on: ubuntu-latest

  #   # env:
  #   #   name: dev
  #   #   container_name : project_name:latest

  #   # container: ${{env.container_name}}    

    


  #   # steps:
  #   #   - name: Check out repository code
  #   #     uses: actions/checkout@v3

  #   # # Use the output from the `hello` step
  #   # - name: Get the output time
  #   #   run: echo "The time was ${{ steps.hello.outputs.time }}"